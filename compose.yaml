services:
  api:
    build:
      context: ./stream_api
    ports:
      - 8000:8000
    networks:
      - stream_network
    depends_on:
      - kafka

  spark:
    build:
      context: ./spark_stream
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DATABASE: $POSTGRES_DATABASE
    networks:
      - stream_network
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - stream_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS: 'true'
    volumes:
      - ./create_kafka_topic.sh:/create_kafka_topic.sh
    command: >
      sh -c "
      /etc/confluent/docker/run &
      sleep 3 &&
      bash /create_kafka_topic.sh &&
      wait
      "
    networks:
      - stream_network
    depends_on:
      - zookeeper
    ports:
      - 9092:9092

networks:
  stream_network:
    driver: bridge
