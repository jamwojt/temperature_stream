services:
  # postgres:
  #   image: postgres:15
  #   ports:
  #     - 5432:5432
  #   environment:
  #     POSTGRES_USER: $POSTGRES_USER
  #     POSGRES_PASSWORD: $POSTGRES_PASSWORD
  #     POSTGRES_DATABASE: $POSTGRES_DATABASE
  #   volumes:
  #     - ./init:/docker-entrypoint/initdb.d/
  #   networks:
  #     - stream_network

  api:
    build:
      context: ./stream_api
    ports:
      - 8000:8000
    networks:
      - stream_network
    depends_on:
      - kafka

  spark:
    build:
      context: ./spark_stream
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DATABASE: $POSTGRES_DATABASE
    networks:
      - stream_network
    depends_on:
      - kafka
      # - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - stream_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      # KAFKA_PROESS_ROLES: broker,controller
      # KAFKA_CONTROLLER_QUORUM_VOTES: 1@localhost:9093
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_REST_HOST_NAME: kafka-rest
      # KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      # KAFKA_REST_LISTENERS: http://0.0.0.0:8082
    networks:
      - stream_network
    depends_on:
      - zookeeper
    ports:
      - 9092:9092

networks:
  stream_network:
    driver: bridge
